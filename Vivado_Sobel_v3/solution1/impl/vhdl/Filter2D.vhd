-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_dout : IN STD_LOGIC_VECTOR (4 downto 0);
    p_src_rows_V_empty_n : IN STD_LOGIC;
    p_src_rows_V_read : OUT STD_LOGIC;
    p_src_cols_V_dout : IN STD_LOGIC_VECTOR (4 downto 0);
    p_src_cols_V_empty_n : IN STD_LOGIC;
    p_src_cols_V_read : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv7_7E : STD_LOGIC_VECTOR (6 downto 0) := "1111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFD : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_rows_V_blk_n : STD_LOGIC;
    signal p_src_cols_V_blk_n : STD_LOGIC;
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal and_ln118_2_reg_1296 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_reg_1252 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_1243 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal and_ln512_reg_1332 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln512_reg_1332_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_255 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_fu_266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal stop_row_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal cols_fu_274_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_fu_288_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_reg_1202 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_1_fu_298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln443_1_reg_1207 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln507_fu_310_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln507_reg_1212 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln147_fu_328_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal xor_ln147_reg_1218 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln147_1_fu_352_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln147_1_reg_1224 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln458_fu_356_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln458_reg_1229 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln443_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_367_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_V_reg_1238 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln887_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln457_reg_1247 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1257 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_1261 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln899_1_reg_1265 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln493_fu_572_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_reg_1271 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_2_fu_604_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_2_reg_1276 : STD_LOGIC_VECTOR (1 downto 0);
    signal right_border_buf_0_6_reg_1281 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op155_read_state4 : BOOLEAN;
    signal ap_predicate_op166_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln444_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_reg_1287 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_617_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln118_2_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln457_reg_1300 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1307 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln493_1_fu_752_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub_ln493_1_reg_1313 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_4_addr_reg_1320 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_buf_0_val_5_addr_reg_1326 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln512_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_kernel_win_0_va_4_fu_876_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_reg_1336 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1341 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1346 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_1_fu_961_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_1_reg_1351 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_2_fu_989_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_2_reg_1356 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_4_fu_995_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_4_reg_1361 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln835_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_va_fu_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_894_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_788_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_806_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_823_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_right_border_buf_0_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal stop_row_fu_266_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln243_fu_270_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal cols_fu_274_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1304_fu_278_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1304_fu_278_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln443_fu_282_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln243_fu_270_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln443_1_fu_292_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln506_fu_302_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln458_fu_306_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln506_fu_302_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln147_fu_316_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln147_fu_316_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln_fu_320_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln147_1_fu_334_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln147_1_fu_334_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln147_fu_342_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln147_fu_346_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln458_fu_306_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_384_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln506_fu_421_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_427_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_1_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_fu_460_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_fu_466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln506_1_fu_483_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_489_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_1_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_2_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_514_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_1_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_1_fu_528_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln147_1_fu_479_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln144_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_fu_545_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln506_1_fu_417_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln118_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_fu_558_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln144_fu_550_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_fu_564_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln147_2_fu_541_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln144_1_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln144_1_fu_577_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln118_1_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_1_fu_590_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln144_1_fu_582_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_1_fu_596_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_623_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ImagLoc_x_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_645_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_2_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_3_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_670_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln142_2_fu_678_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln139_2_fu_684_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln147_fu_697_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln118_4_fu_710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_2_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln118_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln144_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln118_2_fu_702_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fu_728_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln458_1_fu_736_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln891_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_777_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_795_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_813_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_865_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_883_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_917_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1118_fu_929_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln703_fu_935_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_fu_941_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_fu_913_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln703_fu_951_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_1_fu_925_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_3_fu_957_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln703_1_fu_945_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1118_1_fu_973_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln703_5_fu_985_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln703_4_fu_981_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln703_2_fu_967_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln703_2_fu_1030_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln703_1_fu_1027_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln703_3_fu_1033_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln703_6_fu_1044_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_s_fu_1047_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln703_fu_1039_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln703_5_fu_1061_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_1053_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1071_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln785_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1099_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_fu_1066_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_122 : BOOLEAN;
    signal ap_enable_state3_pp0_iter0_stage0 : BOOLEAN;
    signal ap_enable_operation_146 : BOOLEAN;
    signal ap_enable_state4_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op160_store_state4 : BOOLEAN;
    signal ap_enable_operation_160 : BOOLEAN;
    signal ap_predicate_op167_store_state4 : BOOLEAN;
    signal ap_enable_operation_167 : BOOLEAN;
    signal ap_enable_operation_125 : BOOLEAN;
    signal ap_enable_operation_149 : BOOLEAN;
    signal ap_predicate_op158_store_state4 : BOOLEAN;
    signal ap_enable_operation_158 : BOOLEAN;
    signal ap_predicate_op165_store_state4 : BOOLEAN;
    signal ap_enable_operation_165 : BOOLEAN;
    signal ap_enable_operation_127 : BOOLEAN;
    signal ap_enable_operation_152 : BOOLEAN;
    signal ap_predicate_op156_store_state4 : BOOLEAN;
    signal ap_enable_operation_156 : BOOLEAN;
    signal ap_predicate_op164_store_state4 : BOOLEAN;
    signal ap_enable_operation_164 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_886 : BOOLEAN;

    component Sobel_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Filter2D_k_buf_0_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_k_buf_0_bkb
    generic map (
        DataWidth => 8,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    Sobel_mux_32_8_1_1_U9 : component Sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_130,
        din1 => right_border_buf_0_1_fu_134,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_1_reg_1313,
        dout => tmp_3_fu_777_p5);

    Sobel_mux_32_8_1_1_U10 : component Sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_142,
        din1 => right_border_buf_0_4_fu_146,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_1_reg_1313,
        dout => tmp_4_fu_795_p5);

    Sobel_mux_32_8_1_1_U11 : component Sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_6_reg_1281,
        din1 => right_border_buf_0_2_fu_138,
        din2 => ap_const_lv8_0,
        din3 => sub_ln493_1_reg_1313,
        dout => tmp_5_fu_813_p5);

    Sobel_mux_32_8_1_1_U12 : component Sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_788_p3,
        din1 => col_buf_0_val_1_0_fu_806_p3,
        din2 => col_buf_0_val_2_0_fu_823_p3,
        din3 => sub_ln493_reg_1271,
        dout => tmp_6_fu_865_p5);

    Sobel_mux_32_8_1_1_U13 : component Sobel_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_788_p3,
        din1 => col_buf_0_val_1_0_fu_806_p3,
        din2 => col_buf_0_val_2_0_fu_823_p3,
        din3 => sub_ln493_2_reg_1276,
        dout => tmp_7_fu_883_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln443_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((icmp_ln443_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_612_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_255 <= j_V_fu_617_p2;
            elsif (((icmp_ln443_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_255 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    t_V_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                t_V_reg_244 <= i_V_reg_1238;
            elsif ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_244 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                add_ln458_reg_1229 <= add_ln458_fu_356_p2;
                add_ln507_reg_1212 <= add_ln507_fu_310_p2;
                cols_reg_1196 <= cols_fu_274_p1;
                    sext_ln147_1_reg_1224(31 downto 1) <= sext_ln147_1_fu_352_p1(31 downto 1);
                sext_ln443_1_reg_1207 <= sext_ln443_1_fu_298_p1;
                sext_ln443_reg_1202 <= sext_ln443_fu_288_p1;
                stop_row_reg_1186 <= stop_row_fu_266_p1;
                xor_ln147_reg_1218 <= xor_ln147_fu_328_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln512_reg_1332) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln703_1_reg_1351 <= add_ln703_1_fu_961_p2;
                add_ln703_2_reg_1356 <= add_ln703_2_fu_989_p2;
                add_ln703_4_reg_1361 <= add_ln703_4_fu_995_p2;
                src_kernel_win_0_va_6_reg_1341 <= src_kernel_win_0_va_fu_114;
                src_kernel_win_0_va_7_reg_1346 <= src_kernel_win_0_va_1_fu_118;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_fu_612_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln118_2_reg_1296 <= and_ln118_2_fu_664_p2;
                and_ln512_reg_1332 <= and_ln512_fu_757_p2;
                k_buf_0_val_3_addr_reg_1307 <= zext_ln835_fu_745_p1(4 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1320 <= zext_ln835_fu_745_p1(4 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1326 <= zext_ln835_fu_745_p1(4 - 1 downto 0);
                or_ln457_reg_1300 <= or_ln457_fu_740_p2;
                sub_ln493_1_reg_1313 <= sub_ln493_1_fu_752_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln512_reg_1332_pp0_iter1_reg <= and_ln512_reg_1332;
                icmp_ln444_reg_1287 <= icmp_ln444_fu_612_p2;
                right_border_buf_0_6_reg_1281 <= ap_sig_allocacmp_right_border_buf_0_6;
                src_kernel_win_0_va_4_reg_1336 <= src_kernel_win_0_va_4_fu_876_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1238 <= i_V_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln443_fu_362_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln879_1_reg_1261 <= icmp_ln879_1_fu_406_p2;
                icmp_ln879_reg_1257 <= icmp_ln879_fu_400_p2;
                icmp_ln887_reg_1243 <= icmp_ln887_fu_373_p2;
                icmp_ln899_1_reg_1265 <= icmp_ln899_1_fu_412_p2;
                icmp_ln899_reg_1252 <= icmp_ln899_fu_394_p2;
                sub_ln493_2_reg_1276 <= sub_ln493_2_fu_604_p2;
                sub_ln493_reg_1271 <= sub_ln493_fu_572_p2;
                xor_ln457_reg_1247 <= xor_ln457_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_134 <= right_border_buf_0_s_fu_130;
                right_border_buf_0_2_fu_138 <= right_border_buf_0_6_reg_1281;
                right_border_buf_0_3_fu_142 <= col_buf_0_val_1_0_fu_806_p3;
                right_border_buf_0_4_fu_146 <= right_border_buf_0_3_fu_142;
                right_border_buf_0_5_fu_150 <= col_buf_0_val_2_0_fu_823_p3;
                right_border_buf_0_s_fu_130 <= col_buf_0_val_0_0_fu_788_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln444_reg_1287 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_118 <= src_kernel_win_0_va_fu_114;
                src_kernel_win_0_va_2_fu_122 <= src_kernel_win_0_va_5_fu_894_p3;
                src_kernel_win_0_va_3_fu_126 <= src_kernel_win_0_va_2_fu_122;
                src_kernel_win_0_va_fu_114 <= src_kernel_win_0_va_4_fu_876_p3;
            end if;
        end if;
    end process;
    sext_ln147_1_reg_1224(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, icmp_ln443_fu_362_p2, ap_CS_fsm_state2, icmp_ln444_fu_612_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln443_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln444_fu_612_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((icmp_ln444_fu_612_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ImagLoc_x_fu_639_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_2_reg_255));
    add_ln118_1_fu_590_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(trunc_ln506_1_fu_417_p1));
    add_ln118_fu_558_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_1_fu_417_p1));
    add_ln147_fu_346_p2 <= std_logic_vector(signed(ap_const_lv7_7E) + signed(sext_ln147_fu_342_p1));
    add_ln443_1_fu_292_p2 <= std_logic_vector(unsigned(ap_const_lv6_2) + unsigned(sext_ln243_fu_270_p1));
    add_ln443_fu_282_p2 <= std_logic_vector(unsigned(ap_const_lv6_2) + unsigned(sext_ln1304_fu_278_p1));
    add_ln458_fu_356_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln458_fu_306_p1));
    add_ln506_1_fu_483_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFD) + signed(t_V_reg_244));
    add_ln506_fu_421_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(t_V_reg_244));
    add_ln507_fu_310_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln506_fu_302_p1));
    add_ln703_1_fu_961_p2 <= std_logic_vector(unsigned(zext_ln1118_1_fu_925_p1) + unsigned(zext_ln703_3_fu_957_p1));
    add_ln703_2_fu_989_p2 <= std_logic_vector(unsigned(zext_ln703_5_fu_985_p1) + unsigned(zext_ln703_4_fu_981_p1));
    add_ln703_4_fu_995_p2 <= std_logic_vector(unsigned(sub_ln703_2_fu_967_p2) + unsigned(src_kernel_win_0_va_1_fu_118));
    add_ln703_5_fu_1061_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_4_reg_1336) + unsigned(shl_ln703_fu_1039_p2));
    add_ln703_fu_951_p2 <= std_logic_vector(unsigned(zext_ln703_fu_941_p1) + unsigned(zext_ln1118_fu_913_p1));
    and_ln118_1_fu_508_p2 <= (xor_ln118_2_fu_497_p2 and icmp_ln118_1_fu_503_p2);
    and_ln118_2_fu_664_p2 <= (xor_ln118_3_fu_653_p2 and icmp_ln118_2_fu_659_p2);
    and_ln118_fu_446_p2 <= (xor_ln118_1_fu_435_p2 and icmp_ln118_fu_441_p2);
    and_ln144_fu_722_p2 <= (or_ln118_fu_716_p2 and icmp_ln144_2_fu_692_p2);
    and_ln512_fu_757_p2 <= (icmp_ln899_reg_1252 and icmp_ln891_fu_633_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, and_ln512_reg_1332_pp0_iter1_reg, ap_predicate_op155_read_state4, ap_predicate_op166_read_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_const_lv1_1 = and_ln512_reg_1332_pp0_iter1_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op155_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, and_ln512_reg_1332_pp0_iter1_reg, ap_predicate_op155_read_state4, ap_predicate_op166_read_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_lv1_1 = and_ln512_reg_1332_pp0_iter1_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op155_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, and_ln512_reg_1332_pp0_iter1_reg, ap_predicate_op155_read_state4, ap_predicate_op166_read_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_lv1_1 = and_ln512_reg_1332_pp0_iter1_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op155_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op155_read_state4, ap_predicate_op166_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op166_read_state4 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op155_read_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_dst_data_stream_V_full_n, and_ln512_reg_1332_pp0_iter1_reg)
    begin
                ap_block_state5_pp0_stage0_iter2 <= ((ap_const_lv1_1 = and_ln512_reg_1332_pp0_iter1_reg) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_886_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, and_ln118_2_reg_1296)
    begin
                ap_condition_886 <= ((ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln444_fu_612_p2)
    begin
        if ((icmp_ln444_fu_612_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln443_fu_362_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_122_assign_proc : process(icmp_ln444_fu_612_p2)
    begin
                ap_enable_operation_122 <= (icmp_ln444_fu_612_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_125_assign_proc : process(icmp_ln444_fu_612_p2)
    begin
                ap_enable_operation_125 <= (icmp_ln444_fu_612_p2 = ap_const_lv1_0);
    end process;


    ap_enable_operation_127_assign_proc : process(icmp_ln444_fu_612_p2)
    begin
                ap_enable_operation_127 <= (icmp_ln444_fu_612_p2 = ap_const_lv1_0);
    end process;

        ap_enable_operation_146 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_149 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_152 <= (ap_const_boolean_1 = ap_const_boolean_1);

    ap_enable_operation_156_assign_proc : process(ap_predicate_op156_store_state4)
    begin
                ap_enable_operation_156 <= (ap_predicate_op156_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_158_assign_proc : process(ap_predicate_op158_store_state4)
    begin
                ap_enable_operation_158 <= (ap_predicate_op158_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_160_assign_proc : process(ap_predicate_op160_store_state4)
    begin
                ap_enable_operation_160 <= (ap_predicate_op160_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_164_assign_proc : process(ap_predicate_op164_store_state4)
    begin
                ap_enable_operation_164 <= (ap_predicate_op164_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_165_assign_proc : process(ap_predicate_op165_store_state4)
    begin
                ap_enable_operation_165 <= (ap_predicate_op165_store_state4 = ap_const_boolean_1);
    end process;


    ap_enable_operation_167_assign_proc : process(ap_predicate_op167_store_state4)
    begin
                ap_enable_operation_167 <= (ap_predicate_op167_store_state4 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_state3_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
                ap_enable_state3_pp0_iter0_stage0 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_enable_state4_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state4_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op155_read_state4_assign_proc : process(and_ln118_2_reg_1296, icmp_ln899_reg_1252)
    begin
                ap_predicate_op155_read_state4 <= ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln118_2_reg_1296));
    end process;


    ap_predicate_op156_store_state4_assign_proc : process(and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln879_reg_1257)
    begin
                ap_predicate_op156_store_state4 <= ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_reg_1257 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296));
    end process;


    ap_predicate_op158_store_state4_assign_proc : process(and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln879_1_reg_1261)
    begin
                ap_predicate_op158_store_state4 <= ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_1_reg_1261 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296));
    end process;


    ap_predicate_op160_store_state4_assign_proc : process(and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln879_reg_1257)
    begin
                ap_predicate_op160_store_state4 <= ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_reg_1257 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296));
    end process;


    ap_predicate_op164_store_state4_assign_proc : process(and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243)
    begin
                ap_predicate_op164_store_state4 <= ((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296));
    end process;


    ap_predicate_op165_store_state4_assign_proc : process(and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243)
    begin
                ap_predicate_op165_store_state4 <= ((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296));
    end process;


    ap_predicate_op166_read_state4_assign_proc : process(and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243)
    begin
                ap_predicate_op166_read_state4 <= ((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296));
    end process;


    ap_predicate_op167_store_state4_assign_proc : process(and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243)
    begin
                ap_predicate_op167_store_state4 <= ((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296));
    end process;


    ap_ready_assign_proc : process(icmp_ln443_fu_362_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln443_fu_362_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_right_border_buf_0_6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243, right_border_buf_0_5_fu_150, col_buf_0_val_2_0_fu_823_p3)
    begin
        if (((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_right_border_buf_0_6 <= col_buf_0_val_2_0_fu_823_p3;
        else 
            ap_sig_allocacmp_right_border_buf_0_6 <= right_border_buf_0_5_fu_150;
        end if; 
    end process;

    col_buf_0_val_0_0_fu_788_p3 <= 
        k_buf_0_val_3_q0 when (or_ln457_reg_1300(0) = '1') else 
        tmp_3_fu_777_p5;
    col_buf_0_val_1_0_fu_806_p3 <= 
        k_buf_0_val_4_q0 when (or_ln457_reg_1300(0) = '1') else 
        tmp_4_fu_795_p5;
    col_buf_0_val_2_0_fu_823_p3 <= 
        k_buf_0_val_5_q0 when (or_ln457_reg_1300(0) = '1') else 
        tmp_5_fu_813_p5;
    cols_fu_274_p0 <= p_src_cols_V_dout;
        cols_fu_274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cols_fu_274_p0),32));

    i_V_fu_367_p2 <= std_logic_vector(unsigned(t_V_reg_244) + unsigned(ap_const_lv32_1));
    icmp_ln118_1_fu_503_p2 <= "1" when (signed(add_ln506_1_fu_483_p2) < signed(stop_row_reg_1186)) else "0";
    icmp_ln118_2_fu_659_p2 <= "1" when (signed(ImagLoc_x_fu_639_p2) < signed(cols_reg_1196)) else "0";
    icmp_ln118_fu_441_p2 <= "1" when (signed(add_ln506_fu_421_p2) < signed(stop_row_reg_1186)) else "0";
    icmp_ln144_1_fu_536_p2 <= "1" when (signed(select_ln139_1_fu_528_p3) < signed(stop_row_reg_1186)) else "0";
    icmp_ln144_2_fu_692_p2 <= "1" when (signed(select_ln139_2_fu_684_p3) < signed(cols_reg_1196)) else "0";
    icmp_ln144_fu_474_p2 <= "1" when (signed(select_ln139_fu_466_p3) < signed(stop_row_reg_1186)) else "0";
    icmp_ln443_fu_362_p2 <= "1" when (t_V_reg_244 = sext_ln443_1_reg_1207) else "0";
    icmp_ln444_fu_612_p2 <= "1" when (t_V_2_reg_255 = sext_ln443_reg_1202) else "0";
    icmp_ln785_fu_1087_p2 <= "0" when (tmp_8_fu_1071_p4 = ap_const_lv3_0) else "1";
    icmp_ln879_1_fu_406_p2 <= "1" when (t_V_reg_244 = ap_const_lv32_0) else "0";
    icmp_ln879_fu_400_p2 <= "1" when (t_V_reg_244 = ap_const_lv32_1) else "0";
    icmp_ln887_fu_373_p2 <= "1" when (unsigned(t_V_reg_244) < unsigned(stop_row_reg_1186)) else "0";
    icmp_ln891_fu_633_p2 <= "0" when (tmp_12_fu_623_p4 = ap_const_lv31_0) else "1";
    icmp_ln899_1_fu_412_p2 <= "1" when (unsigned(t_V_reg_244) > unsigned(stop_row_reg_1186)) else "0";
    icmp_ln899_fu_394_p2 <= "0" when (tmp_fu_384_p4 = ap_const_lv31_0) else "1";
    j_V_fu_617_p2 <= std_logic_vector(unsigned(t_V_2_reg_255) + unsigned(ap_const_lv32_1));
    k_buf_0_val_3_address0 <= zext_ln835_fu_745_p1(4 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1307;

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243, icmp_ln879_reg_1257, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_reg_1257 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243, icmp_ln879_reg_1257, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_reg_1257 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= zext_ln835_fu_745_p1(4 - 1 downto 0);
    k_buf_0_val_4_address1 <= k_buf_0_val_4_addr_reg_1320;

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243, icmp_ln879_1_reg_1261, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_1_reg_1261 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_ln899_reg_1252, icmp_ln887_reg_1243, icmp_ln879_1_reg_1261, k_buf_0_val_3_q0, ap_condition_886)
    begin
        if ((ap_const_boolean_1 = ap_condition_886)) then
            if (((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif (((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_1_reg_1261 = ap_const_lv1_1))) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243, icmp_ln879_1_reg_1261, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_1_reg_1261 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= zext_ln835_fu_745_p1(4 - 1 downto 0);
    k_buf_0_val_5_address1 <= k_buf_0_val_5_addr_reg_1326;

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243, icmp_ln879_reg_1257, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_reg_1257 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, icmp_ln899_reg_1252, icmp_ln887_reg_1243, icmp_ln879_reg_1257, k_buf_0_val_4_q0, ap_condition_886)
    begin
        if ((ap_const_boolean_1 = ap_condition_886)) then
            if (((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif (((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_reg_1257 = ap_const_lv1_1))) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243, icmp_ln879_reg_1257, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (icmp_ln879_reg_1257 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln118_fu_716_p2 <= (xor_ln118_4_fu_710_p2 or tmp_13_fu_645_p3);
    or_ln340_fu_1107_p2 <= (p_Result_s_fu_1053_p3 or overflow_fu_1093_p2);
    or_ln457_fu_740_p2 <= (xor_ln457_reg_1247 or icmp_ln118_2_fu_659_p2);
    overflow_fu_1093_p2 <= (xor_ln785_fu_1081_p2 and icmp_ln785_fu_1087_p2);
    p_Result_s_fu_1053_p3 <= p_Val2_s_fu_1047_p2(10 downto 10);
    p_Val2_1_fu_1066_p2 <= std_logic_vector(unsigned(add_ln703_4_reg_1361) + unsigned(add_ln703_5_fu_1061_p2));
    p_Val2_s_fu_1047_p2 <= std_logic_vector(unsigned(sub_ln703_3_fu_1033_p2) + unsigned(zext_ln703_6_fu_1044_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, and_ln512_reg_1332_pp0_iter1_reg)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1332_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        select_ln340_fu_1099_p3 when (or_ln340_fu_1107_p2(0) = '1') else 
        p_Val2_1_fu_1066_p2;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln512_reg_1332_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln512_reg_1332_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_cols_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_blk_n <= p_src_cols_V_empty_n;
        else 
            p_src_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_cols_V_read <= ap_const_logic_1;
        else 
            p_src_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, and_ln118_2_reg_1296, icmp_ln899_reg_1252, icmp_ln887_reg_1243)
    begin
        if ((((icmp_ln887_reg_1243 = ap_const_lv1_1) and (icmp_ln899_reg_1252 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln899_reg_1252 = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln118_2_reg_1296) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op155_read_state4, ap_predicate_op166_read_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op166_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op155_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_V_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_blk_n <= p_src_rows_V_empty_n;
        else 
            p_src_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_V_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_src_rows_V_empty_n, p_src_cols_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (p_src_cols_V_empty_n = ap_const_logic_0) or (p_src_rows_V_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src_rows_V_read <= ap_const_logic_1;
        else 
            p_src_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln118_1_fu_596_p3 <= 
        add_ln118_1_fu_590_p2 when (and_ln118_1_fu_508_p2(0) = '1') else 
        select_ln144_1_fu_582_p3;
    select_ln118_2_fu_702_p3 <= 
        ImagLoc_x_fu_639_p2 when (and_ln118_2_fu_664_p2(0) = '1') else 
        sub_ln147_fu_697_p2;
    select_ln118_fu_564_p3 <= 
        add_ln118_fu_558_p2 when (and_ln118_fu_446_p2(0) = '1') else 
        select_ln144_fu_550_p3;
    select_ln139_1_fu_528_p3 <= 
        sub_ln142_1_fu_522_p2 when (tmp_11_fu_514_p3(0) = '1') else 
        add_ln506_1_fu_483_p2;
    select_ln139_2_fu_684_p3 <= 
        sub_ln142_2_fu_678_p2 when (tmp_14_fu_670_p3(0) = '1') else 
        ImagLoc_x_fu_639_p2;
    select_ln139_fu_466_p3 <= 
        sub_ln142_fu_460_p2 when (tmp_9_fu_452_p3(0) = '1') else 
        add_ln506_fu_421_p2;
    select_ln144_1_fu_582_p3 <= 
        trunc_ln147_2_fu_541_p1 when (icmp_ln144_1_fu_536_p2(0) = '1') else 
        sub_ln144_1_fu_577_p2;
    select_ln144_fu_550_p3 <= 
        trunc_ln147_1_fu_479_p1 when (icmp_ln144_fu_474_p2(0) = '1') else 
        sub_ln144_fu_545_p2;
    select_ln340_fu_1099_p3 <= 
        ap_const_lv8_FF when (xor_ln785_fu_1081_p2(0) = '1') else 
        ap_const_lv8_0;
    sext_ln1304_fu_278_p0 <= p_src_cols_V_dout;
        sext_ln1304_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1304_fu_278_p0),6));

        sext_ln147_1_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln147_fu_346_p2),32));

        sext_ln147_fu_342_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln147_1_fu_334_p3),7));

    sext_ln243_fu_270_p0 <= p_src_rows_V_dout;
        sext_ln243_fu_270_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln243_fu_270_p0),6));

        sext_ln443_1_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_1_fu_292_p2),32));

        sext_ln443_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln443_fu_282_p2),32));

    sext_ln_fu_320_p3 <= (trunc_ln147_fu_316_p1 & ap_const_lv1_0);
    shl_ln1118_1_fu_973_p3 <= (src_kernel_win_0_va_fu_114 & ap_const_lv1_0);
    shl_ln1118_fu_929_p2 <= std_logic_vector(shift_left(unsigned(src_kernel_win_0_va_2_fu_122),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln147_1_fu_334_p1 <= p_src_cols_V_dout;
    shl_ln147_1_fu_334_p3 <= (shl_ln147_1_fu_334_p1 & ap_const_lv1_0);
    shl_ln703_fu_1039_p2 <= std_logic_vector(shift_left(unsigned(src_kernel_win_0_va_6_reg_1341),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    shl_ln_fu_917_p3 <= (src_kernel_win_0_va_2_fu_122 & ap_const_lv1_0);
    src_kernel_win_0_va_4_fu_876_p3 <= 
        tmp_6_fu_865_p5 when (icmp_ln899_1_reg_1265(0) = '1') else 
        col_buf_0_val_0_0_fu_788_p3;
    src_kernel_win_0_va_5_fu_894_p3 <= 
        tmp_7_fu_883_p5 when (icmp_ln899_1_reg_1265(0) = '1') else 
        col_buf_0_val_2_0_fu_823_p3;
    stop_row_fu_266_p0 <= p_src_rows_V_dout;
        stop_row_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(stop_row_fu_266_p0),32));

    sub_ln142_1_fu_522_p2 <= std_logic_vector(unsigned(ap_const_lv32_3) - unsigned(t_V_reg_244));
    sub_ln142_2_fu_678_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_2_reg_255));
    sub_ln142_fu_460_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(t_V_reg_244));
    sub_ln144_1_fu_577_p2 <= std_logic_vector(unsigned(xor_ln147_reg_1218) - unsigned(trunc_ln147_2_fu_541_p1));
    sub_ln144_fu_545_p2 <= std_logic_vector(unsigned(xor_ln147_reg_1218) - unsigned(trunc_ln147_1_fu_479_p1));
    sub_ln147_fu_697_p2 <= std_logic_vector(signed(sext_ln147_1_reg_1224) - signed(select_ln139_2_fu_684_p3));
    sub_ln493_1_fu_752_p2 <= std_logic_vector(unsigned(add_ln458_reg_1229) - unsigned(trunc_ln458_1_fu_736_p1));
    sub_ln493_2_fu_604_p2 <= std_logic_vector(unsigned(add_ln507_reg_1212) - unsigned(select_ln118_1_fu_596_p3));
    sub_ln493_fu_572_p2 <= std_logic_vector(unsigned(add_ln507_reg_1212) - unsigned(select_ln118_fu_564_p3));
    sub_ln703_1_fu_945_p2 <= std_logic_vector(unsigned(sub_ln703_fu_935_p2) - unsigned(src_kernel_win_0_va_3_fu_126));
    sub_ln703_2_fu_967_p2 <= std_logic_vector(unsigned(sub_ln703_1_fu_945_p2) - unsigned(src_kernel_win_0_va_5_fu_894_p3));
    sub_ln703_3_fu_1033_p2 <= std_logic_vector(unsigned(zext_ln703_2_fu_1030_p1) - unsigned(zext_ln703_1_fu_1027_p1));
    sub_ln703_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(shl_ln1118_fu_929_p2));
    tmp_10_fu_489_p3 <= add_ln506_1_fu_483_p2(31 downto 31);
    tmp_11_fu_514_p3 <= add_ln506_1_fu_483_p2(31 downto 31);
    tmp_12_fu_623_p4 <= t_V_2_reg_255(31 downto 1);
    tmp_13_fu_645_p3 <= ImagLoc_x_fu_639_p2(31 downto 31);
    tmp_14_fu_670_p3 <= ImagLoc_x_fu_639_p2(31 downto 31);
    tmp_2_fu_427_p3 <= add_ln506_fu_421_p2(31 downto 31);
    tmp_8_fu_1071_p4 <= p_Val2_s_fu_1047_p2(10 downto 8);
    tmp_9_fu_452_p3 <= add_ln506_fu_421_p2(31 downto 31);
    tmp_fu_384_p4 <= t_V_reg_244(31 downto 1);
    trunc_ln147_1_fu_479_p1 <= select_ln139_fu_466_p3(2 - 1 downto 0);
    trunc_ln147_2_fu_541_p1 <= select_ln139_1_fu_528_p3(2 - 1 downto 0);
    trunc_ln147_fu_316_p0 <= p_src_rows_V_dout;
    trunc_ln147_fu_316_p1 <= trunc_ln147_fu_316_p0(1 - 1 downto 0);
    trunc_ln458_1_fu_736_p1 <= x_fu_728_p3(2 - 1 downto 0);
    trunc_ln458_fu_306_p0 <= p_src_cols_V_dout;
    trunc_ln458_fu_306_p1 <= trunc_ln458_fu_306_p0(2 - 1 downto 0);
    trunc_ln506_1_fu_417_p1 <= t_V_reg_244(2 - 1 downto 0);
    trunc_ln506_fu_302_p0 <= p_src_rows_V_dout;
    trunc_ln506_fu_302_p1 <= trunc_ln506_fu_302_p0(2 - 1 downto 0);
    x_fu_728_p3 <= 
        select_ln139_2_fu_684_p3 when (and_ln144_fu_722_p2(0) = '1') else 
        select_ln118_2_fu_702_p3;
    xor_ln118_1_fu_435_p2 <= (tmp_2_fu_427_p3 xor ap_const_lv1_1);
    xor_ln118_2_fu_497_p2 <= (tmp_10_fu_489_p3 xor ap_const_lv1_1);
    xor_ln118_3_fu_653_p2 <= (tmp_13_fu_645_p3 xor ap_const_lv1_1);
    xor_ln118_4_fu_710_p2 <= (icmp_ln118_2_fu_659_p2 xor ap_const_lv1_1);
    xor_ln147_fu_328_p2 <= (sext_ln_fu_320_p3 xor ap_const_lv2_2);
    xor_ln457_fu_378_p2 <= (icmp_ln887_fu_373_p2 xor ap_const_lv1_1);
    xor_ln785_fu_1081_p2 <= (p_Result_s_fu_1053_p3 xor ap_const_lv1_1);
    zext_ln1118_1_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_917_p3),10));
    zext_ln1118_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_3_fu_126),9));
    zext_ln703_1_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_1_reg_1351),11));
    zext_ln703_2_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_7_reg_1346),11));
    zext_ln703_3_fu_957_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_fu_951_p2),10));
    zext_ln703_4_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_1_fu_973_p3),10));
    zext_ln703_5_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_4_fu_876_p3),10));
    zext_ln703_6_fu_1044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_2_reg_1356),11));
    zext_ln703_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_894_p3),9));
    zext_ln835_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_fu_728_p3),64));
end behav;
