// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Sobel_HH_
#define _Sobel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Block_proc.h"
#include "AXIM2Mat.h"
#include "Filter2D.h"
#include "Mat2AXIM.h"
#include "fifo_w5_d2_A.h"
#include "fifo_w8_d2_A.h"
#include "start_for_Filter2eOg.h"

namespace ap_rtl {

struct Sobel : public sc_module {
    // Port declarations 16
    sc_out< sc_lv<5> > image_in_address0;
    sc_out< sc_logic > image_in_ce0;
    sc_out< sc_lv<32> > image_in_d0;
    sc_in< sc_lv<32> > image_in_q0;
    sc_out< sc_logic > image_in_we0;
    sc_out< sc_lv<5> > image_out_address0;
    sc_out< sc_logic > image_out_ce0;
    sc_out< sc_lv<32> > image_out_d0;
    sc_in< sc_lv<32> > image_out_q0;
    sc_out< sc_logic > image_out_we0;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Sobel(sc_module_name name);
    SC_HAS_PROCESS(Sobel);

    ~Sobel();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    Block_proc* Block_proc_U0;
    AXIM2Mat* AXIM2Mat_U0;
    Filter2D* Filter2D_U0;
    Mat2AXIM* Mat2AXIM_U0;
    fifo_w5_d2_A* src_rows_V_c_U;
    fifo_w5_d2_A* src_cols_V_c_U;
    fifo_w8_d2_A* src_data_stream_0_V_U;
    fifo_w5_d2_A* src_rows_V_c8_U;
    fifo_w5_d2_A* src_cols_V_c9_U;
    fifo_w8_d2_A* dst_data_stream_0_V_U;
    start_for_Filter2eOg* start_for_Filter2eOg_U;
    sc_signal< sc_logic > Block_proc_U0_ap_start;
    sc_signal< sc_logic > Block_proc_U0_ap_done;
    sc_signal< sc_logic > Block_proc_U0_ap_continue;
    sc_signal< sc_logic > Block_proc_U0_ap_idle;
    sc_signal< sc_logic > Block_proc_U0_ap_ready;
    sc_signal< sc_lv<5> > Block_proc_U0_src_rows_V_out_din;
    sc_signal< sc_logic > Block_proc_U0_src_rows_V_out_write;
    sc_signal< sc_lv<5> > Block_proc_U0_src_cols_V_out_din;
    sc_signal< sc_logic > Block_proc_U0_src_cols_V_out_write;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_start;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_done;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_continue;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_idle;
    sc_signal< sc_logic > AXIM2Mat_U0_ap_ready;
    sc_signal< sc_logic > AXIM2Mat_U0_start_out;
    sc_signal< sc_logic > AXIM2Mat_U0_start_write;
    sc_signal< sc_lv<5> > AXIM2Mat_U0_fb_address0;
    sc_signal< sc_logic > AXIM2Mat_U0_fb_ce0;
    sc_signal< sc_logic > AXIM2Mat_U0_img_rows_V_read;
    sc_signal< sc_logic > AXIM2Mat_U0_img_cols_V_read;
    sc_signal< sc_lv<8> > AXIM2Mat_U0_img_data_stream_V_din;
    sc_signal< sc_logic > AXIM2Mat_U0_img_data_stream_V_write;
    sc_signal< sc_lv<5> > AXIM2Mat_U0_img_rows_V_out_din;
    sc_signal< sc_logic > AXIM2Mat_U0_img_rows_V_out_write;
    sc_signal< sc_lv<5> > AXIM2Mat_U0_img_cols_V_out_din;
    sc_signal< sc_logic > AXIM2Mat_U0_img_cols_V_out_write;
    sc_signal< sc_logic > Filter2D_U0_ap_start;
    sc_signal< sc_logic > Filter2D_U0_ap_done;
    sc_signal< sc_logic > Filter2D_U0_ap_continue;
    sc_signal< sc_logic > Filter2D_U0_ap_idle;
    sc_signal< sc_logic > Filter2D_U0_ap_ready;
    sc_signal< sc_logic > Filter2D_U0_p_src_rows_V_read;
    sc_signal< sc_logic > Filter2D_U0_p_src_cols_V_read;
    sc_signal< sc_logic > Filter2D_U0_p_src_data_stream_V_read;
    sc_signal< sc_lv<8> > Filter2D_U0_p_dst_data_stream_V_din;
    sc_signal< sc_logic > Filter2D_U0_p_dst_data_stream_V_write;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_start;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_done;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_continue;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_idle;
    sc_signal< sc_logic > Mat2AXIM_U0_ap_ready;
    sc_signal< sc_logic > Mat2AXIM_U0_img_data_stream_V_read;
    sc_signal< sc_lv<5> > Mat2AXIM_U0_fb_address0;
    sc_signal< sc_logic > Mat2AXIM_U0_fb_ce0;
    sc_signal< sc_logic > Mat2AXIM_U0_fb_we0;
    sc_signal< sc_lv<32> > Mat2AXIM_U0_fb_d0;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > src_rows_V_c_full_n;
    sc_signal< sc_lv<5> > src_rows_V_c_dout;
    sc_signal< sc_logic > src_rows_V_c_empty_n;
    sc_signal< sc_logic > src_cols_V_c_full_n;
    sc_signal< sc_lv<5> > src_cols_V_c_dout;
    sc_signal< sc_logic > src_cols_V_c_empty_n;
    sc_signal< sc_logic > src_data_stream_0_V_full_n;
    sc_signal< sc_lv<8> > src_data_stream_0_V_dout;
    sc_signal< sc_logic > src_data_stream_0_V_empty_n;
    sc_signal< sc_logic > src_rows_V_c8_full_n;
    sc_signal< sc_lv<5> > src_rows_V_c8_dout;
    sc_signal< sc_logic > src_rows_V_c8_empty_n;
    sc_signal< sc_logic > src_cols_V_c9_full_n;
    sc_signal< sc_lv<5> > src_cols_V_c9_dout;
    sc_signal< sc_logic > src_cols_V_c9_empty_n;
    sc_signal< sc_logic > dst_data_stream_0_V_full_n;
    sc_signal< sc_lv<8> > dst_data_stream_0_V_dout;
    sc_signal< sc_logic > dst_data_stream_0_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_Block_proc_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_Block_proc_U0_ap_ready;
    sc_signal< sc_lv<2> > Block_proc_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_AXIM2Mat_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_AXIM2Mat_U0_ap_ready;
    sc_signal< sc_lv<2> > AXIM2Mat_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_Mat2AXIM_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_Mat2AXIM_U0_ap_ready;
    sc_signal< sc_lv<2> > Mat2AXIM_U0_ap_ready_count;
    sc_signal< sc_logic > Block_proc_U0_start_full_n;
    sc_signal< sc_logic > Block_proc_U0_start_write;
    sc_signal< sc_lv<1> > start_for_Filter2D_U0_din;
    sc_signal< sc_logic > start_for_Filter2D_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Filter2D_U0_dout;
    sc_signal< sc_logic > start_for_Filter2D_U0_empty_n;
    sc_signal< sc_logic > Filter2D_U0_start_full_n;
    sc_signal< sc_logic > Filter2D_U0_start_write;
    sc_signal< sc_logic > Mat2AXIM_U0_start_full_n;
    sc_signal< sc_logic > Mat2AXIM_U0_start_write;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_AXIM2Mat_U0_ap_continue();
    void thread_AXIM2Mat_U0_ap_start();
    void thread_Block_proc_U0_ap_continue();
    void thread_Block_proc_U0_ap_start();
    void thread_Block_proc_U0_start_full_n();
    void thread_Block_proc_U0_start_write();
    void thread_Filter2D_U0_ap_continue();
    void thread_Filter2D_U0_ap_start();
    void thread_Filter2D_U0_start_full_n();
    void thread_Filter2D_U0_start_write();
    void thread_Mat2AXIM_U0_ap_continue();
    void thread_Mat2AXIM_U0_ap_start();
    void thread_Mat2AXIM_U0_start_full_n();
    void thread_Mat2AXIM_U0_start_write();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_AXIM2Mat_U0_ap_ready();
    void thread_ap_sync_Block_proc_U0_ap_ready();
    void thread_ap_sync_Mat2AXIM_U0_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_image_in_address0();
    void thread_image_in_ce0();
    void thread_image_in_d0();
    void thread_image_in_we0();
    void thread_image_out_address0();
    void thread_image_out_ce0();
    void thread_image_out_d0();
    void thread_image_out_we0();
    void thread_start_for_Filter2D_U0_din();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
