// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Mat2AXIM.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Mat2AXIM::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Mat2AXIM::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> Mat2AXIM::ap_ST_fsm_state1 = "1";
const sc_lv<5> Mat2AXIM::ap_ST_fsm_state2 = "10";
const sc_lv<5> Mat2AXIM::ap_ST_fsm_state3 = "100";
const sc_lv<5> Mat2AXIM::ap_ST_fsm_state4 = "1000";
const sc_lv<5> Mat2AXIM::ap_ST_fsm_state5 = "10000";
const sc_lv<32> Mat2AXIM::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Mat2AXIM::ap_const_lv32_3 = "11";
const sc_lv<32> Mat2AXIM::ap_const_lv32_1 = "1";
const sc_lv<1> Mat2AXIM::ap_const_lv1_0 = "0";
const sc_lv<32> Mat2AXIM::ap_const_lv32_2 = "10";
const sc_lv<4> Mat2AXIM::ap_const_lv4_0 = "0000";
const sc_lv<32> Mat2AXIM::ap_const_lv32_4 = "100";
const sc_lv<4> Mat2AXIM::ap_const_lv4_A = "1010";
const sc_lv<4> Mat2AXIM::ap_const_lv4_1 = "1";
const sc_lv<3> Mat2AXIM::ap_const_lv3_0 = "000";
const sc_lv<32> Mat2AXIM::ap_const_lv32_6 = "110";
const sc_lv<5> Mat2AXIM::ap_const_lv5_7 = "111";
const sc_lv<6> Mat2AXIM::ap_const_lv6_1F = "11111";
const sc_lv<32> Mat2AXIM::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> Mat2AXIM::ap_const_lv32_1F = "11111";
const sc_lv<1> Mat2AXIM::ap_const_lv1_1 = "1";
const bool Mat2AXIM::ap_const_boolean_1 = true;

Mat2AXIM::Mat2AXIM(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln253_1_fu_188_p2);
    sensitive << ( shl_ln_reg_367 );
    sensitive << ( zext_ln253_2_fu_184_p1 );

    SC_METHOD(thread_add_ln253_2_fu_212_p2);
    sensitive << ( trunc_ln253_1_reg_377 );
    sensitive << ( trunc_ln253_2_fu_208_p1 );

    SC_METHOD(thread_add_ln253_fu_179_p2);
    sensitive << ( zext_ln241_reg_372 );
    sensitive << ( zext_ln253_fu_175_p1 );

    SC_METHOD(thread_and_ln253_1_fu_340_p2);
    sensitive << ( fb_q0 );
    sensitive << ( xor_ln253_2_fu_335_p2 );

    SC_METHOD(thread_and_ln253_2_fu_346_p2);
    sensitive << ( and_ln253_reg_407 );
    sensitive << ( select_ln253_3_fu_328_p3 );

    SC_METHOD(thread_and_ln253_fu_287_p2);
    sensitive << ( shl_ln253_1_fu_275_p2 );
    sensitive << ( lshr_ln253_fu_281_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( icmp_ln240_fu_119_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln240_fu_119_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_col_V_fu_169_p2);
    sensitive << ( t_V_1_reg_108 );

    SC_METHOD(thread_empty_60_fu_225_p2);
    sensitive << ( shl_ln1_fu_217_p3 );

    SC_METHOD(thread_fb_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( fb_addr_reg_390 );
    sensitive << ( zext_ln253_1_fu_203_p1 );

    SC_METHOD(thread_fb_ce0);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_fb_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln253_1_fu_340_p2 );
    sensitive << ( and_ln253_2_fu_346_p2 );

    SC_METHOD(thread_fb_we0);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln240_fu_119_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_97 );

    SC_METHOD(thread_icmp_ln241_fu_163_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( t_V_1_reg_108 );

    SC_METHOD(thread_icmp_ln253_fu_231_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln241_fu_163_p2 );
    sensitive << ( shl_ln1_fu_217_p3 );
    sensitive << ( empty_60_fu_225_p2 );

    SC_METHOD(thread_img_data_stream_V_blk_n);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_img_data_stream_V_read);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_lshr_ln253_fu_281_p2);
    sensitive << ( zext_ln253_8_fu_271_p1 );

    SC_METHOD(thread_lshr_ln_fu_193_p4);
    sensitive << ( add_ln253_1_fu_188_p2 );

    SC_METHOD(thread_row_V_fu_125_p2);
    sensitive << ( t_V_reg_97 );

    SC_METHOD(thread_select_ln253_1_fu_253_p3);
    sensitive << ( icmp_ln253_fu_231_p2 );
    sensitive << ( zext_ln253_3_fu_237_p1 );
    sensitive << ( zext_ln253_4_fu_241_p1 );

    SC_METHOD(thread_select_ln253_2_fu_302_p3);
    sensitive << ( icmp_ln253_reg_395 );
    sensitive << ( zext_ln253_3_reg_401 );
    sensitive << ( xor_ln253_fu_297_p2 );

    SC_METHOD(thread_select_ln253_3_fu_328_p3);
    sensitive << ( icmp_ln253_reg_395 );
    sensitive << ( shl_ln253_fu_312_p2 );
    sensitive << ( tmp_fu_318_p4 );

    SC_METHOD(thread_select_ln253_fu_245_p3);
    sensitive << ( icmp_ln253_fu_231_p2 );
    sensitive << ( zext_ln253_3_fu_237_p1 );
    sensitive << ( zext_ln253_4_fu_241_p1 );

    SC_METHOD(thread_shl_ln1352_1_fu_139_p3);
    sensitive << ( t_V_reg_97 );

    SC_METHOD(thread_shl_ln1_fu_217_p3);
    sensitive << ( add_ln253_2_fu_212_p2 );

    SC_METHOD(thread_shl_ln253_1_fu_275_p2);
    sensitive << ( zext_ln253_7_fu_267_p1 );

    SC_METHOD(thread_shl_ln253_fu_312_p2);
    sensitive << ( zext_ln253_5_fu_293_p1 );
    sensitive << ( zext_ln253_6_fu_308_p1 );

    SC_METHOD(thread_shl_ln_fu_131_p3);
    sensitive << ( t_V_reg_97 );

    SC_METHOD(thread_tmp_fu_318_p4);
    sensitive << ( shl_ln253_fu_312_p2 );

    SC_METHOD(thread_trunc_ln253_1_fu_155_p3);
    sensitive << ( trunc_ln253_fu_151_p1 );

    SC_METHOD(thread_trunc_ln253_2_fu_208_p1);
    sensitive << ( t_V_1_reg_108 );

    SC_METHOD(thread_trunc_ln253_fu_151_p1);
    sensitive << ( t_V_reg_97 );

    SC_METHOD(thread_xor_ln253_1_fu_261_p2);
    sensitive << ( select_ln253_fu_245_p3 );

    SC_METHOD(thread_xor_ln253_2_fu_335_p2);
    sensitive << ( and_ln253_reg_407 );

    SC_METHOD(thread_xor_ln253_fu_297_p2);
    sensitive << ( zext_ln253_3_reg_401 );

    SC_METHOD(thread_zext_ln241_fu_147_p1);
    sensitive << ( shl_ln1352_1_fu_139_p3 );

    SC_METHOD(thread_zext_ln253_1_fu_203_p1);
    sensitive << ( lshr_ln_fu_193_p4 );

    SC_METHOD(thread_zext_ln253_2_fu_184_p1);
    sensitive << ( add_ln253_fu_179_p2 );

    SC_METHOD(thread_zext_ln253_3_fu_237_p1);
    sensitive << ( shl_ln1_fu_217_p3 );

    SC_METHOD(thread_zext_ln253_4_fu_241_p1);
    sensitive << ( empty_60_fu_225_p2 );

    SC_METHOD(thread_zext_ln253_5_fu_293_p1);
    sensitive << ( img_data_stream_V_dout );

    SC_METHOD(thread_zext_ln253_6_fu_308_p1);
    sensitive << ( select_ln253_2_fu_302_p3 );

    SC_METHOD(thread_zext_ln253_7_fu_267_p1);
    sensitive << ( select_ln253_1_fu_253_p3 );

    SC_METHOD(thread_zext_ln253_8_fu_271_p1);
    sensitive << ( xor_ln253_1_fu_261_p2 );

    SC_METHOD(thread_zext_ln253_fu_175_p1);
    sensitive << ( t_V_1_reg_108 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln240_fu_119_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln241_fu_163_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Mat2AXIM_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_data_stream_V_dout, "(port)img_data_stream_V_dout");
    sc_trace(mVcdFile, img_data_stream_V_empty_n, "(port)img_data_stream_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_V_read, "(port)img_data_stream_V_read");
    sc_trace(mVcdFile, fb_address0, "(port)fb_address0");
    sc_trace(mVcdFile, fb_ce0, "(port)fb_ce0");
    sc_trace(mVcdFile, fb_we0, "(port)fb_we0");
    sc_trace(mVcdFile, fb_d0, "(port)fb_d0");
    sc_trace(mVcdFile, fb_q0, "(port)fb_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, img_data_stream_V_blk_n, "img_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln240_fu_119_p2, "icmp_ln240_fu_119_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, row_V_fu_125_p2, "row_V_fu_125_p2");
    sc_trace(mVcdFile, row_V_reg_362, "row_V_reg_362");
    sc_trace(mVcdFile, shl_ln_fu_131_p3, "shl_ln_fu_131_p3");
    sc_trace(mVcdFile, shl_ln_reg_367, "shl_ln_reg_367");
    sc_trace(mVcdFile, zext_ln241_fu_147_p1, "zext_ln241_fu_147_p1");
    sc_trace(mVcdFile, zext_ln241_reg_372, "zext_ln241_reg_372");
    sc_trace(mVcdFile, trunc_ln253_1_fu_155_p3, "trunc_ln253_1_fu_155_p3");
    sc_trace(mVcdFile, trunc_ln253_1_reg_377, "trunc_ln253_1_reg_377");
    sc_trace(mVcdFile, col_V_fu_169_p2, "col_V_fu_169_p2");
    sc_trace(mVcdFile, col_V_reg_385, "col_V_reg_385");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, fb_addr_reg_390, "fb_addr_reg_390");
    sc_trace(mVcdFile, icmp_ln241_fu_163_p2, "icmp_ln241_fu_163_p2");
    sc_trace(mVcdFile, icmp_ln253_fu_231_p2, "icmp_ln253_fu_231_p2");
    sc_trace(mVcdFile, icmp_ln253_reg_395, "icmp_ln253_reg_395");
    sc_trace(mVcdFile, zext_ln253_3_fu_237_p1, "zext_ln253_3_fu_237_p1");
    sc_trace(mVcdFile, zext_ln253_3_reg_401, "zext_ln253_3_reg_401");
    sc_trace(mVcdFile, and_ln253_fu_287_p2, "and_ln253_fu_287_p2");
    sc_trace(mVcdFile, and_ln253_reg_407, "and_ln253_reg_407");
    sc_trace(mVcdFile, t_V_reg_97, "t_V_reg_97");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, t_V_1_reg_108, "t_V_1_reg_108");
    sc_trace(mVcdFile, zext_ln253_1_fu_203_p1, "zext_ln253_1_fu_203_p1");
    sc_trace(mVcdFile, shl_ln1352_1_fu_139_p3, "shl_ln1352_1_fu_139_p3");
    sc_trace(mVcdFile, trunc_ln253_fu_151_p1, "trunc_ln253_fu_151_p1");
    sc_trace(mVcdFile, zext_ln253_fu_175_p1, "zext_ln253_fu_175_p1");
    sc_trace(mVcdFile, add_ln253_fu_179_p2, "add_ln253_fu_179_p2");
    sc_trace(mVcdFile, zext_ln253_2_fu_184_p1, "zext_ln253_2_fu_184_p1");
    sc_trace(mVcdFile, add_ln253_1_fu_188_p2, "add_ln253_1_fu_188_p2");
    sc_trace(mVcdFile, lshr_ln_fu_193_p4, "lshr_ln_fu_193_p4");
    sc_trace(mVcdFile, trunc_ln253_2_fu_208_p1, "trunc_ln253_2_fu_208_p1");
    sc_trace(mVcdFile, add_ln253_2_fu_212_p2, "add_ln253_2_fu_212_p2");
    sc_trace(mVcdFile, shl_ln1_fu_217_p3, "shl_ln1_fu_217_p3");
    sc_trace(mVcdFile, empty_60_fu_225_p2, "empty_60_fu_225_p2");
    sc_trace(mVcdFile, zext_ln253_4_fu_241_p1, "zext_ln253_4_fu_241_p1");
    sc_trace(mVcdFile, select_ln253_fu_245_p3, "select_ln253_fu_245_p3");
    sc_trace(mVcdFile, select_ln253_1_fu_253_p3, "select_ln253_1_fu_253_p3");
    sc_trace(mVcdFile, xor_ln253_1_fu_261_p2, "xor_ln253_1_fu_261_p2");
    sc_trace(mVcdFile, zext_ln253_7_fu_267_p1, "zext_ln253_7_fu_267_p1");
    sc_trace(mVcdFile, zext_ln253_8_fu_271_p1, "zext_ln253_8_fu_271_p1");
    sc_trace(mVcdFile, shl_ln253_1_fu_275_p2, "shl_ln253_1_fu_275_p2");
    sc_trace(mVcdFile, lshr_ln253_fu_281_p2, "lshr_ln253_fu_281_p2");
    sc_trace(mVcdFile, xor_ln253_fu_297_p2, "xor_ln253_fu_297_p2");
    sc_trace(mVcdFile, select_ln253_2_fu_302_p3, "select_ln253_2_fu_302_p3");
    sc_trace(mVcdFile, zext_ln253_5_fu_293_p1, "zext_ln253_5_fu_293_p1");
    sc_trace(mVcdFile, zext_ln253_6_fu_308_p1, "zext_ln253_6_fu_308_p1");
    sc_trace(mVcdFile, shl_ln253_fu_312_p2, "shl_ln253_fu_312_p2");
    sc_trace(mVcdFile, tmp_fu_318_p4, "tmp_fu_318_p4");
    sc_trace(mVcdFile, xor_ln253_2_fu_335_p2, "xor_ln253_2_fu_335_p2");
    sc_trace(mVcdFile, select_ln253_3_fu_328_p3, "select_ln253_3_fu_328_p3");
    sc_trace(mVcdFile, and_ln253_1_fu_340_p2, "and_ln253_1_fu_340_p2");
    sc_trace(mVcdFile, and_ln253_2_fu_346_p2, "and_ln253_2_fu_346_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Mat2AXIM::~Mat2AXIM() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Mat2AXIM::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln240_fu_119_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(img_data_stream_V_empty_n.read(), ap_const_logic_1))) {
        t_V_1_reg_108 = col_V_reg_385.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln240_fu_119_p2.read(), ap_const_lv1_0))) {
        t_V_1_reg_108 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_V_reg_97 = row_V_reg_362.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        t_V_reg_97 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln241_fu_163_p2.read()))) {
        and_ln253_reg_407 = and_ln253_fu_287_p2.read();
        fb_addr_reg_390 =  (sc_lv<5>) (zext_ln253_1_fu_203_p1.read());
        icmp_ln253_reg_395 = icmp_ln253_fu_231_p2.read();
        zext_ln253_3_reg_401 = zext_ln253_3_fu_237_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        col_V_reg_385 = col_V_fu_169_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_V_reg_362 = row_V_fu_125_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln240_fu_119_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_367 = shl_ln_fu_131_p3.read();
        trunc_ln253_1_reg_377 = trunc_ln253_1_fu_155_p3.read();
        zext_ln241_reg_372 = zext_ln241_fu_147_p1.read();
    }
}

void Mat2AXIM::thread_add_ln253_1_fu_188_p2() {
    add_ln253_1_fu_188_p2 = (!zext_ln253_2_fu_184_p1.read().is_01() || !shl_ln_reg_367.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln253_2_fu_184_p1.read()) + sc_biguint<7>(shl_ln_reg_367.read()));
}

void Mat2AXIM::thread_add_ln253_2_fu_212_p2() {
    add_ln253_2_fu_212_p2 = (!trunc_ln253_1_reg_377.read().is_01() || !trunc_ln253_2_fu_208_p1.read().is_01())? sc_lv<2>(): (sc_biguint<2>(trunc_ln253_1_reg_377.read()) + sc_biguint<2>(trunc_ln253_2_fu_208_p1.read()));
}

void Mat2AXIM::thread_add_ln253_fu_179_p2() {
    add_ln253_fu_179_p2 = (!zext_ln241_reg_372.read().is_01() || !zext_ln253_fu_175_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln241_reg_372.read()) + sc_biguint<6>(zext_ln253_fu_175_p1.read()));
}

void Mat2AXIM::thread_and_ln253_1_fu_340_p2() {
    and_ln253_1_fu_340_p2 = (fb_q0.read() & xor_ln253_2_fu_335_p2.read());
}

void Mat2AXIM::thread_and_ln253_2_fu_346_p2() {
    and_ln253_2_fu_346_p2 = (select_ln253_3_fu_328_p3.read() & and_ln253_reg_407.read());
}

void Mat2AXIM::thread_and_ln253_fu_287_p2() {
    and_ln253_fu_287_p2 = (shl_ln253_1_fu_275_p2.read() & lshr_ln253_fu_281_p2.read());
}

void Mat2AXIM::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Mat2AXIM::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Mat2AXIM::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Mat2AXIM::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Mat2AXIM::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Mat2AXIM::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Mat2AXIM::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln240_fu_119_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Mat2AXIM::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Mat2AXIM::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln240_fu_119_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Mat2AXIM::thread_col_V_fu_169_p2() {
    col_V_fu_169_p2 = (!t_V_1_reg_108.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(t_V_1_reg_108.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Mat2AXIM::thread_empty_60_fu_225_p2() {
    empty_60_fu_225_p2 = (shl_ln1_fu_217_p3.read() | ap_const_lv5_7);
}

void Mat2AXIM::thread_fb_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        fb_address0 = fb_addr_reg_390.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        fb_address0 =  (sc_lv<5>) (zext_ln253_1_fu_203_p1.read());
    } else {
        fb_address0 = "XXXXX";
    }
}

void Mat2AXIM::thread_fb_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(img_data_stream_V_empty_n.read(), ap_const_logic_1)))) {
        fb_ce0 = ap_const_logic_1;
    } else {
        fb_ce0 = ap_const_logic_0;
    }
}

void Mat2AXIM::thread_fb_d0() {
    fb_d0 = (and_ln253_1_fu_340_p2.read() | and_ln253_2_fu_346_p2.read());
}

void Mat2AXIM::thread_fb_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(img_data_stream_V_empty_n.read(), ap_const_logic_1))) {
        fb_we0 = ap_const_logic_1;
    } else {
        fb_we0 = ap_const_logic_0;
    }
}

void Mat2AXIM::thread_icmp_ln240_fu_119_p2() {
    icmp_ln240_fu_119_p2 = (!t_V_reg_97.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_97.read() == ap_const_lv4_A);
}

void Mat2AXIM::thread_icmp_ln241_fu_163_p2() {
    icmp_ln241_fu_163_p2 = (!t_V_1_reg_108.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_108.read() == ap_const_lv4_A);
}

void Mat2AXIM::thread_icmp_ln253_fu_231_p2() {
    icmp_ln253_fu_231_p2 = (!shl_ln1_fu_217_p3.read().is_01() || !empty_60_fu_225_p2.read().is_01())? sc_lv<1>(): (sc_biguint<5>(shl_ln1_fu_217_p3.read()) > sc_biguint<5>(empty_60_fu_225_p2.read()));
}

void Mat2AXIM::thread_img_data_stream_V_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        img_data_stream_V_blk_n = img_data_stream_V_empty_n.read();
    } else {
        img_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void Mat2AXIM::thread_img_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(img_data_stream_V_empty_n.read(), ap_const_logic_1))) {
        img_data_stream_V_read = ap_const_logic_1;
    } else {
        img_data_stream_V_read = ap_const_logic_0;
    }
}

void Mat2AXIM::thread_lshr_ln253_fu_281_p2() {
    lshr_ln253_fu_281_p2 = (!zext_ln253_8_fu_271_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln253_8_fu_271_p1.read().to_uint();
}

void Mat2AXIM::thread_lshr_ln_fu_193_p4() {
    lshr_ln_fu_193_p4 = add_ln253_1_fu_188_p2.read().range(6, 2);
}

void Mat2AXIM::thread_row_V_fu_125_p2() {
    row_V_fu_125_p2 = (!t_V_reg_97.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(t_V_reg_97.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Mat2AXIM::thread_select_ln253_1_fu_253_p3() {
    select_ln253_1_fu_253_p3 = (!icmp_ln253_fu_231_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln253_fu_231_p2.read()[0].to_bool())? zext_ln253_4_fu_241_p1.read(): zext_ln253_3_fu_237_p1.read());
}

void Mat2AXIM::thread_select_ln253_2_fu_302_p3() {
    select_ln253_2_fu_302_p3 = (!icmp_ln253_reg_395.read()[0].is_01())? sc_lv<6>(): ((icmp_ln253_reg_395.read()[0].to_bool())? xor_ln253_fu_297_p2.read(): zext_ln253_3_reg_401.read());
}

void Mat2AXIM::thread_select_ln253_3_fu_328_p3() {
    select_ln253_3_fu_328_p3 = (!icmp_ln253_reg_395.read()[0].is_01())? sc_lv<32>(): ((icmp_ln253_reg_395.read()[0].to_bool())? tmp_fu_318_p4.read(): shl_ln253_fu_312_p2.read());
}

void Mat2AXIM::thread_select_ln253_fu_245_p3() {
    select_ln253_fu_245_p3 = (!icmp_ln253_fu_231_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln253_fu_231_p2.read()[0].to_bool())? zext_ln253_3_fu_237_p1.read(): zext_ln253_4_fu_241_p1.read());
}

void Mat2AXIM::thread_shl_ln1352_1_fu_139_p3() {
    shl_ln1352_1_fu_139_p3 = esl_concat<4,1>(t_V_reg_97.read(), ap_const_lv1_0);
}

void Mat2AXIM::thread_shl_ln1_fu_217_p3() {
    shl_ln1_fu_217_p3 = esl_concat<2,3>(add_ln253_2_fu_212_p2.read(), ap_const_lv3_0);
}

void Mat2AXIM::thread_shl_ln253_1_fu_275_p2() {
    shl_ln253_1_fu_275_p2 = (!zext_ln253_7_fu_267_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF << (unsigned short)zext_ln253_7_fu_267_p1.read().to_uint();
}

void Mat2AXIM::thread_shl_ln253_fu_312_p2() {
    shl_ln253_fu_312_p2 = (!zext_ln253_6_fu_308_p1.read().is_01())? sc_lv<32>(): zext_ln253_5_fu_293_p1.read() << (unsigned short)zext_ln253_6_fu_308_p1.read().to_uint();
}

void Mat2AXIM::thread_shl_ln_fu_131_p3() {
    shl_ln_fu_131_p3 = esl_concat<4,3>(t_V_reg_97.read(), ap_const_lv3_0);
}

void Mat2AXIM::thread_tmp_fu_318_p4() {
    tmp_fu_318_p4 = shl_ln253_fu_312_p2.read().range(0, 31);
}

void Mat2AXIM::thread_trunc_ln253_1_fu_155_p3() {
    trunc_ln253_1_fu_155_p3 = esl_concat<1,1>(trunc_ln253_fu_151_p1.read(), ap_const_lv1_0);
}

void Mat2AXIM::thread_trunc_ln253_2_fu_208_p1() {
    trunc_ln253_2_fu_208_p1 = t_V_1_reg_108.read().range(2-1, 0);
}

void Mat2AXIM::thread_trunc_ln253_fu_151_p1() {
    trunc_ln253_fu_151_p1 = t_V_reg_97.read().range(1-1, 0);
}

void Mat2AXIM::thread_xor_ln253_1_fu_261_p2() {
    xor_ln253_1_fu_261_p2 = (select_ln253_fu_245_p3.read() ^ ap_const_lv6_1F);
}

void Mat2AXIM::thread_xor_ln253_2_fu_335_p2() {
    xor_ln253_2_fu_335_p2 = (and_ln253_reg_407.read() ^ ap_const_lv32_FFFFFFFF);
}

void Mat2AXIM::thread_xor_ln253_fu_297_p2() {
    xor_ln253_fu_297_p2 = (zext_ln253_3_reg_401.read() ^ ap_const_lv6_1F);
}

void Mat2AXIM::thread_zext_ln241_fu_147_p1() {
    zext_ln241_fu_147_p1 = esl_zext<6,5>(shl_ln1352_1_fu_139_p3.read());
}

void Mat2AXIM::thread_zext_ln253_1_fu_203_p1() {
    zext_ln253_1_fu_203_p1 = esl_zext<64,5>(lshr_ln_fu_193_p4.read());
}

void Mat2AXIM::thread_zext_ln253_2_fu_184_p1() {
    zext_ln253_2_fu_184_p1 = esl_zext<7,6>(add_ln253_fu_179_p2.read());
}

void Mat2AXIM::thread_zext_ln253_3_fu_237_p1() {
    zext_ln253_3_fu_237_p1 = esl_zext<6,5>(shl_ln1_fu_217_p3.read());
}

void Mat2AXIM::thread_zext_ln253_4_fu_241_p1() {
    zext_ln253_4_fu_241_p1 = esl_zext<6,5>(empty_60_fu_225_p2.read());
}

void Mat2AXIM::thread_zext_ln253_5_fu_293_p1() {
    zext_ln253_5_fu_293_p1 = esl_zext<32,8>(img_data_stream_V_dout.read());
}

void Mat2AXIM::thread_zext_ln253_6_fu_308_p1() {
    zext_ln253_6_fu_308_p1 = esl_zext<32,6>(select_ln253_2_fu_302_p3.read());
}

void Mat2AXIM::thread_zext_ln253_7_fu_267_p1() {
    zext_ln253_7_fu_267_p1 = esl_zext<32,6>(select_ln253_1_fu_253_p3.read());
}

void Mat2AXIM::thread_zext_ln253_8_fu_271_p1() {
    zext_ln253_8_fu_271_p1 = esl_zext<32,6>(xor_ln253_1_fu_261_p2.read());
}

void Mat2AXIM::thread_zext_ln253_fu_175_p1() {
    zext_ln253_fu_175_p1 = esl_zext<6,4>(t_V_1_reg_108.read());
}

void Mat2AXIM::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln240_fu_119_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln241_fu_163_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(img_data_stream_V_empty_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

